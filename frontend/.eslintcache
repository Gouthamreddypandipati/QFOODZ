[{"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\index.js":"1","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\store.js":"2","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\App.js":"4","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\orderReducers.js":"7","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Header.js":"8","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\LoginScreen.js":"9","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\productReducers.js":"10","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\HomeScreen.js":"11","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\PaymentScreen.js":"12","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\CartScreen.js":"13","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProductScreen.js":"14","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\RegisterScreen.js":"15","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\OrderScreen.js":"16","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\UserListScreen.js":"17","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Footer.js":"18","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProfileScreen.js":"19","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProductEditScreen.js":"20","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\PlaceOrderScreen.js":"21","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProductListScreen.js":"22","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\UserEditScreen.js":"23","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\OrderListScreen.js":"24","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ShippingScreen.js":"25","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Product.js":"26","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Message.js":"27","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\SearchBox.js":"28","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\FormContainer.js":"29","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Paginate.js":"30","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Loader.js":"31","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\ProductCarousel.js":"32","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Rating.js":"33","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\CheckoutSteps.js":"34","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\cartConstants.js":"35","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\userConstants.js":"36","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\orderConstants.js":"37","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\productConstants.js":"38","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\productActions.js":"39","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\userActions.js":"40","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\cartActions.js":"41","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\orderActions.js":"42"},{"size":594,"mtime":1669789090900,"results":"43","hashOfConfig":"44"},{"size":2417,"mtime":1669789090938,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1669789090929,"results":"46","hashOfConfig":"44"},{"size":2223,"mtime":1669891620208,"results":"47","hashOfConfig":"44"},{"size":1486,"mtime":1669789091145,"results":"48","hashOfConfig":"44"},{"size":3926,"mtime":1669789091173,"results":"49","hashOfConfig":"44"},{"size":4079,"mtime":1669789091154,"results":"50","hashOfConfig":"44"},{"size":3071,"mtime":1670398319702,"results":"51","hashOfConfig":"44"},{"size":2549,"mtime":1669789091202,"results":"52","hashOfConfig":"44"},{"size":4080,"mtime":1669789091164,"results":"53","hashOfConfig":"44"},{"size":1531,"mtime":1670398358525,"results":"54","hashOfConfig":"44"},{"size":2265,"mtime":1670398226630,"results":"55","hashOfConfig":"44"},{"size":4725,"mtime":1669814897245,"results":"56","hashOfConfig":"44"},{"size":11856,"mtime":1670402556866,"results":"57","hashOfConfig":"44"},{"size":3923,"mtime":1670397993667,"results":"58","hashOfConfig":"44"},{"size":9986,"mtime":1670401724613,"results":"59","hashOfConfig":"44"},{"size":3501,"mtime":1670397835689,"results":"60","hashOfConfig":"44"},{"size":385,"mtime":1670238919795,"results":"61","hashOfConfig":"44"},{"size":6735,"mtime":1670398061018,"results":"62","hashOfConfig":"44"},{"size":6617,"mtime":1669888602704,"results":"63","hashOfConfig":"44"},{"size":6558,"mtime":1670398078921,"results":"64","hashOfConfig":"44"},{"size":4745,"mtime":1670397977304,"results":"65","hashOfConfig":"44"},{"size":3912,"mtime":1669789091309,"results":"66","hashOfConfig":"44"},{"size":3581,"mtime":1670398260899,"results":"67","hashOfConfig":"44"},{"size":6740,"mtime":1670407031256,"results":"68","hashOfConfig":"44"},{"size":1055,"mtime":1669893667686,"results":"69","hashOfConfig":"44"},{"size":228,"mtime":1669789091039,"results":"70","hashOfConfig":"44"},{"size":984,"mtime":1669789091089,"results":"71","hashOfConfig":"44"},{"size":378,"mtime":1669789091008,"results":"72","hashOfConfig":"44"},{"size":859,"mtime":1670333322164,"results":"73","hashOfConfig":"44"},{"size":458,"mtime":1669789091030,"results":"74","hashOfConfig":"44"},{"size":1031,"mtime":1670398282381,"results":"75","hashOfConfig":"44"},{"size":1886,"mtime":1669789091080,"results":"76","hashOfConfig":"44"},{"size":1593,"mtime":1669789090987,"results":"77","hashOfConfig":"44"},{"size":287,"mtime":1669789091108,"results":"78","hashOfConfig":"44"},{"size":1479,"mtime":1669789091135,"results":"79","hashOfConfig":"44"},{"size":1240,"mtime":1669789091117,"results":"80","hashOfConfig":"44"},{"size":1502,"mtime":1669789091126,"results":"81","hashOfConfig":"44"},{"size":5931,"mtime":1671608082171,"results":"82","hashOfConfig":"44"},{"size":7338,"mtime":1670398337211,"results":"83","hashOfConfig":"44"},{"size":1310,"mtime":1670402087239,"results":"84","hashOfConfig":"44"},{"size":5966,"mtime":1670398395548,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"ea3kad",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\index.js",[],["177","178"],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\store.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\App.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Header.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\OrderScreen.js",["179"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AdbJcAD1JnVyl_kbpqSwL-B4GF5I0dFGASMBmOy_04I-oEH0Zt4fSxEkkej6lQWATtqQxR2QrOevUebf'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X {item.price} = {(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>{order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>{order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>{order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>RS:{order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {userInfo && userInfo.isAdmin===false && !order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                                \n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\PlaceOrderScreen.js",["180"],"import React, { useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X {item.price} = {(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>{cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>{cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>{cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>RS:{cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems.length === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\UserEditScreen.js",["181"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\screens\\ShippingScreen.js",["182"],"import React, { useState } from 'react'\nimport { Form, Button,ListGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport swal from 'sweetalert'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n    const [ordertime,settime]=useState(0)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        async function getLocation() {\n            if (navigator.geolocation) {\n              await navigator.geolocation.getCurrentPosition(showPosition);\n            } else { \n               console.log(\"Geolocation is not supported by this browser.\");\n            }\n          }\n          function showPosition(position) {\n            console.log( \"Latitude: \" + position.coords.latitude + \n            \"<br>Longitude: \" + position.coords.longitude);\n            let lat1 = 13.024598228655767;\n                  let lat2 = 12.990354269071714;\n                  let lon1 = 77.70629085320729;\n                  let lon2 = 77.6891706795851;\n                  distance=distance(lat1, lon1,\n                                     lat2, lon2)\n                  if(distance<=5.0){\n                    swal(\"Your order will be at your door step soon...\")\n                  }\n                  else{\n                    swal(\"Sorry, your address exceeds 5km you have to pickup your order at our shop location\")\n                  }\n\n                        \n                       \n          }\n          function distance(lat1, lon1,lat2, lon2)\n              {\n             \n                  // The math module contains a function\n                  // named toRadians which converts from\n                  // degrees to radians.\n                  lon1 =  lon1 * Math.PI / 180;\n                  lon2 = lon2 * Math.PI / 180;\n                  lat1 = lat1 * Math.PI / 180;\n                  lat2 = lat2 * Math.PI / 180;\n             \n                  // Haversine formula\n                  let dlon = lon2 - lon1;\n                  let dlat = lat2 - lat1;\n                  let a = Math.pow(Math.sin(dlat / 2), 2)\n                           + Math.cos(lat1) * Math.cos(lat2)\n                           * Math.pow(Math.sin(dlon / 2),2);\n                         \n                  let c = 2 * Math.asin(Math.sqrt(a));\n             \n                  // Radius of earth in kilometers. Use 3956\n                  // for miles\n                  let r = 6371;\n             \n                  // calculate the result\n                  return(c * r)\n              }\n            //   12.990354269071714, 77.6891706795851\n              getLocation()\n\n\n\n        dispatch(saveShippingAddress({ address, city, postalCode, country,ordertime }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <ListGroup.Item>\n                                                    \n                                                        \n                                                            Selecttimefordelivery:<Form.Control\n                                                                as=\"select\"\n                                                                onChange={(e) => settime(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [10,1,7].map((x) => (\n                                                                         <option key={x} value={x}>\n                                                                            {x}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        \n\n                                                </ListGroup.Item><br></br>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Product.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Message.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\ProductCarousel.js",["183"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Carousel } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel pause=\"hover\" className=\"bg-dark\">\n      <Carousel.Item>\n        <div className='background'></div>\n        \n      </Carousel.Item>\n      <Carousel.Item>\n      <div className='background2'></div>\n\n\n        <Carousel.Caption>\n        </Carousel.Caption>\n      </Carousel.Item>\n    </Carousel>\n            )\n\n    )\n}\n\nexport default ProductCarousel\n","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\productActions.js",["184"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\gouth\\OneDrive\\Desktop\\Food_app_complete\\FoodApp\\frontend\\src\\actions\\orderActions.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":65,"column":8,"nodeType":"191","endLine":65,"endColumn":62,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":35,"column":8,"nodeType":"191","endLine":35,"endColumn":26,"suggestions":"194"},{"ruleId":"189","severity":1,"message":"195","line":43,"column":8,"nodeType":"191","endLine":43,"endColumn":46,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":38,"column":19,"nodeType":"199","messageId":"200","endLine":38,"endColumn":27},{"ruleId":"201","severity":1,"message":"202","line":12,"column":29,"nodeType":"199","messageId":"203","endLine":12,"endColumn":37},{"ruleId":"201","severity":1,"message":"204","line":117,"column":17,"nodeType":"199","messageId":"203","endLine":117,"endColumn":21},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["207"],"React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["209"],"no-func-assign","'distance' is a function.","Identifier","isAFunction","no-unused-vars","'products' is assigned a value but never used.","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"216","text":"217"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"218","text":"219"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"220","text":"221"},[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1258,1276],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]"]